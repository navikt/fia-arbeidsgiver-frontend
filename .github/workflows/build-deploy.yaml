name: Build, test and deploy
run-name: Build and deploy app || ${{ github.event.head_commit.message }}
on:
  push:
    branches:
      - "*"

  pull_request:
    branches:
      - "*"

  # Allow updating playwright snapshots during manual runs
  workflow_call:
    inputs:
      update-snapshots:
        description: "Update playwright snapshots?"
        type: boolean
  
  # Allow updating playwright snapshots during automatic runs
  workflow_dispatch: 
    inputs:
      update-snapshots:
        description: "Update playwright snapshots?"
        type: boolean

env:
  NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  docker-build-push:
    name: Build, test and push docker image
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.1.9
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Lint
        run: bun lint
      - name: Run testing-library tests
        run: bun run test
      - name: Put host.docker.internal i hosts
        run: sudo echo "127.0.0.1 host.docker.internal" | sudo tee -a /etc/hosts
      - run: bunx playwright install --with-deps
      - name: Set up cache
        id: cache
        uses: actions/cache@v4
        with:
          key: cache/${{github.repository}}/${{github.ref}}
          restore-keys: cache/${{github.repository}}/refs/heads/master
          path: .test/**
      - name: Initialize playwright snapshots
        if: ${{steps.cache.outputs.cache-hit != 'true' || inputs.update-snapshots == 'true'}}
        run: npx playwright test --update-snapshots
      - name: Run playwright tests
        continue-on-error: true
        run: bun playwright test
      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: .test/spec/results/
          retention-days: 7
          overwrite: true
      - name: Build
        run: bun run build
      - name: Push to Google Artifact Registry
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: nais/docker-build-push@v0
        id: docker-push
        with:
          team: pia
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
    outputs:
      image: ${{ steps.docker-push.outputs.image }}

  deploy:
    strategy:
      matrix:
        cluster: [dev, prod]
    name: Deploy to ${{ matrix.cluster }}-gcp
    if: github.ref == 'refs/heads/main'
    needs: docker-build-push
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: ${{ matrix.cluster }}-gcp
          IMAGE: ${{ needs.docker-build-push.outputs.image }}
          RESOURCE: .nais/nais.yaml
          VARS: .nais/${{ matrix.cluster }}.yaml

  trivy-scan:
    if: ${{ github.ref == 'refs/heads/main' && github.actor != 'dependabot[bot]' }}
    name: Scanner docker image med Trivy
    needs: docker-build-push
    permissions:
      contents: read # to write sarif
      security-events: write # push sarif to github security
      id-token: write # for nais/login
    runs-on: ubuntu-latest
    steps:
      - uses: navikt/pia-actions/trivy-scan@v1 # https://github.com/navikt/pia-actions/tree/main/trivy-scan
        with:
          image: ${{ needs.docker-build-push.outputs.image }}
          team: pia
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}